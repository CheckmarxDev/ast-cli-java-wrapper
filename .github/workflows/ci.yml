name: AST Java Wrapper CI

on: [ pull_request ]

jobs:
  integration-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          lfs: true

      - name: Install Git LFS
        run: |
          sudo apt-get update
          sudo apt-get install git-lfs
          git lfs install

      - name: Checkout LFS objects
        run: git lfs checkout

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up JDK 11
        uses: actions/setup-java@v4.3.0
        with:
          distribution: 'temurin'
          java-version: '11'

      - name: Check existence of cx-linux binary
        run: |
          if [ ! -f "src/main/resources/cx-linux" ]; then
          echo "cx-linux binary does not exist"; exit 1;
          fi
      - name: Check existence of cx-linux-arm binary
        run: |
          if [ ! -f "src/main/resources/cx-linux-arm" ]; then
          echo "cx-linux-arm binary does not exist"; exit 1;
          fi
      - name: Check existence of cx.exe binary
        run: |
          if [ ! -f "src/main/resources/cx.exe" ]; then
            echo "cx.exe binary does not exist"; exit 1;
          fi
      - name: Check existence of cx-mac binary
        run: |
          if [ ! -f "src/main/resources/cx-mac" ]; then
            echo "cx-mac binary does not exist"; exit 1;
          fi

      - name: Install xmllint
        run: sudo apt-get install -y libxml2-utils

      - name: Run tests with JaCoCo
        run: mvn test jacoco:report
        env:
          CX_CLIENT_ID: ${{ secrets.CX_CLIENT_ID}}
          CX_CLIENT_SECRET: ${{ secrets.CX_CLIENT_SECRET}}
          CX_BASE_URI: ${{ secrets.CX_BASE_URI }}
          CX_TENANT: ${{ secrets.CX_TENANT }}
          CX_APIKEY: ${{ secrets.CX_APIKEY }}

      - name: Print total coverage percentage
        run: |
          COVERED_LINES=$(xmllint --xpath "string(//report/counter[@type='LINE']/@covered)" target/site/jacoco/jacoco.xml)
          MISSED_LINES=$(xmllint --xpath "string(//report/counter[@type='LINE']/@missed)" target/site/jacoco/jacoco.xml)
          TOTAL_LINES=$((COVERED_LINES + MISSED_LINES))
          COVERAGE_PERCENTAGE=$(echo "scale=2; $COVERED_LINES / $TOTAL_LINES * 100" | bc)
          echo "Total coverage percentage: $COVERAGE_PERCENTAGE%"
      
      
      
      

      - name: Generate JaCoCo Badge
        uses: cicirello/jacoco-badge-generator@f33476a5a3fd5a4f77cb5eef2ebe728c1dd5b921 #v2.11.0
        with:
          jacoco-csv-file: target/site/jacoco/jacoco.csv

      - name: Upload JaCoCo coverage report
        uses: actions/upload-artifact@c7d193f32edcb7bfad88892161225aeda64e9392 #v4
        with:
          name: jacoco-coverage-report
          path: target/site/jacoco

      - name: Build with Maven
        run: mvn -B verify -DskipTests -Dgpg.skip --file pom.xml

      - name: Run SpotBugs Analysis
        if: ${{ github.actor != 'dependabot[bot]' }}
        uses: jwgmeligmeyling/spotbugs-github-action@b8e2c3523acb34c87f14e18cbcd2d87db8c8584e #v1.2
        with:
          path: '**/spotbugsXml.xml'
