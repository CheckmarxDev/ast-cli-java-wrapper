name: Release Creation

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Dev release tag'
        required: true
        type: string
      dev:
        description: 'Is dev build'
        required: false
        default: true
        type: boolean
      cliTag:
        description: 'Version of the CLI to bundle'
        required: false
        type: string
  workflow_call:
    inputs:
      tag:
        description: 'Dev release tag'
        required: true
        type: string
      dev:
        description: 'Is dev build'
        required: false
        default: true
        type: boolean
      cliTag:
        description: 'Version of the CLI to bundle'
        required: false
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          lfs: true

      - name: Download CLI
        if: inputs.cliTag
        run: |
          chmod +x ./.github/scripts/update_cli.sh
          ./.github/scripts/update_cli.sh ${{ inputs.cliTag }}

      - name: Tag
        run: |
          echo ${{ inputs.tag }}
          tag=${{ inputs.tag }}
          echo "RELEASE_VERSION=${{ inputs.tag }}" >> $GITHUB_ENV
          message='${{ inputs.tag }}'
          git config user.name "${GITHUB_ACTOR}"
          git config user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git tag -a "${tag}" -m "${message}"
          git push origin "${tag}"

      - name: Cache local Maven repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Set up Maven Central Repository
        uses: actions/setup-java@v4.3.0
        with:
          java-version: '11'
          distribution: 'temurin'
          server-id: ossrh
          server-username: MAVEN_USERNAME
          server-password: MAVEN_PASSWORD
          gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }}
          gpg-passphrase: MAVEN_GPG_PASSPHRASE
          

        
      - name: Update the POM version.
        run: mvn -B versions:set -DnewVersion='${{ env.RELEASE_VERSION }}' --file pom.xml -DskipTests

      - name: Build artifactId property
        run: |
          prop=''
          if [ ${{ inputs.dev }} = true ] && ![ "${{ inputs.tag }}" = "1.0.0-SNAPSHOT" ]; then
            prop='-Dast.wrapper.id=ast-cli-java-wrapper-dev'
          fi
          echo "AID_PROP=${prop}" >> $GITHUB_ENV

      - name: Publish package
        run: mvn --batch-mode deploy -DskipTests ${{ env.AID_PROP }}
        env:
          MAVEN_USERNAME: ${{ secrets.OSSRH_USERNAME }}
          MAVEN_PASSWORD: ${{ secrets.OSSRH_TOKEN }}
          MAVEN_GPG_PASSPHRASE: ${{ secrets.MAVEN_GPG_PASSPHRASE }}

      - name: Release
        uses: softprops/action-gh-release@a6c7483a42ee9d5daced968f6c217562cd680f7f #v2
        with:
          generate_release_notes: true
          tag_name: ${{ inputs.tag }}
          prerelease: ${{ inputs.dev }}
